"use strict";(self.webpackChunktop_tasks=self.webpackChunktop_tasks||[]).push([[173],{124:(e,t,s)=>{s.r(t),s.d(t,{default:()=>l});const n=(e,t)=>[...e].filter(e=>e.name.includes(t));function i(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class a{showHidden(){const{hiddenPined:e,hiddenDefault:t}=this.subElements;this.filterPin.length?e.classList.add("topTask__hidden-pinned"):e.classList.remove("topTask__hidden-pinned"),this.filterDefault.length?t.classList.add("topTask__hidden-default"):t.classList.remove("topTask__hidden-default")}constructor(){i(this,"subElements",{}),i(this,"tasks",[{name:"first task",pinned:!1},{name:"second task",pinned:!1},{name:"third task",pinned:!1},{name:"four task",pinned:!1},{name:"five task",pinned:!1}]),i(this,"pinnedTasks",[{name:"six task",pinned:!0},{name:"seven task",pinned:!0}]),i(this,"onFilter",e=>{const{listPinned:t,listDefault:s}=this.subElements,i=e.target.value.toLowerCase();this.filterDefault=n(this.tasks,i),this.filterPin=n(this.pinnedTasks,i),s.innerHTML=this.getListTasks(this.filterDefault),this.showHidden()}),i(this,"onCreate",e=>{if("Enter"!==e.code)return null;if(""===e.target.value.trim())return null;const t=e.target.value,{listDefault:s,listPinned:n,hiddenPined:i,hiddenDefault:a}=this.subElements;this.tasks.push({name:t,pinned:!1}),s.innerHTML=this.getListTasks(this.tasks),n.innerHTML=this.getListTasks(this.pinnedTasks),i.classList.add("topTask__hidden-pinned"),a.classList.add("topTask__hidden-default")}),i(this,"onPin",e=>{if(e.target.dataset.pin){const{listPinned:t,hiddenDefault:s,hiddenPined:n}=this.subElements,i=e.target.closest(".topTasks__task").textContent.trim();this.tasks=[...this.tasks].filter(e=>e.name!==i),this.pinnedTasks.push({name:i,pinned:!0}),n.classList.add("topTask__hidden-pinned"),this.tasks.length||s.classList.remove("topTask__hidden-default"),e.target.classList.add("topTasks__icon-pinned"),t.append(e.target.closest(".topTasks__task"))}}),i(this,"unPin",e=>{if(e.target.dataset.pin){const{listDefault:t,hiddenPined:s,hiddenDefault:n}=this.subElements,i=e.target.closest(".topTasks__task").textContent.trim();this.pinnedTasks=[...this.pinnedTasks].filter(e=>e.name!==i),this.tasks.push({name:i,pinned:!1}),n.classList.add("topTask__hidden-default"),this.pinnedTasks.length||s.classList.remove("topTask__hidden-pinned"),e.target.classList.remove("topTasks__icon-pinned"),t.append(e.target.closest(".topTasks__task"))}}),this.filterPin=[],this.filterDefault=[],this.render()}render(){const e=document.createElement("div");e.innerHTML=this.getTemplate(),this.element=e.firstElementChild,this.subElements=this.getSubElements(),this.initEventListeners()}initEventListeners(){const{inputTask:e,listDefault:t,listPinned:s}=this.subElements;console.log(e),e.addEventListener("input",this.onFilter),e.addEventListener("keydown",this.onCreate),t.addEventListener("click",this.onPin),s.addEventListener("click",this.unPin)}getSubElements(){const e=this.element.querySelectorAll("[data-element]");for(const t of e)this.subElements[t.dataset.element]=t;return this.subElements}getListTasks(e){return e.map(e=>e.pinned?`<div class="topTasks__task">\n                ${e.name}\n                <div class="topTasks__icon topTasks__icon-pinned" data-pin="pin">  \n                </div>\n            </div>`:`<div class="topTasks__task">\n                ${e.name}\n                <div class="topTasks__icon" data-pin="pin">  \n                </div>\n            </div>`).join("")}getTemplate(){return` <div class="topTasks__table">\n        <h1 class="topTasks__header">Top Tasks</h1>\n        <input class="topTasks__input" type="text" required placeholder="name task" data-element="inputTask">\n        <h2 class="topTasks__header">Pinned:</h2>\n        <div class="topTasks__task-list topTasks__task-list_pinned" data-element="listPinned">\n            ${this.getListTasks(this.pinnedTasks)}\n        </div>\n        <div class="topTask__hidden topTask__hidden-pinned" data-element="hiddenPined">No pinned tasks</div>\n        <h2 class="topTasks__header">All Taks:</h2>\n        <div class="topTasks__task-list topTasks__task-list_default" data-element="listDefault">\n            ${this.getListTasks(this.tasks)}\n        </div>\n        <div class="topTask__hidden topTask__hidden-default" data-element="hiddenDefault">No all tasks</div>\n    </div>`}remove(){this.element&&this.element.remove()}destroy(){this.remove(),this.element=null,this.subElements=null}}function d(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class l{constructor(){d(this,"subElements",{}),d(this,"components",{})}render(){const e=document.createElement("div");return e.innerHTML=this.getTemplate(),this.element=e.firstElementChild,this.subElements=this.getSubElements(),console.log(this.element),this.initComponents(),this.renderComponents(),this.element}initComponents(){const e=new a;this.components={toptasks:e}}renderComponents(){Object.keys(this.components).forEach(e=>{const t=this.subElements[e],{element:s}=this.components[e];t.append(s)})}getSubElements(){const e=this.element.querySelectorAll("[data-element]");console.log(e);for(const t of e)this.subElements[t.dataset.element]=t;return this.subElements}removeEventListeners(){}remove(){this.element&&this.element.remove()}destroy(){this.remove(),this.element=null,this.subElements=null;for(const e of Object.values(this.components))e.destroy()}getTemplate(){return'<div class="topTasks">\n           <div data-element="toptasks">\n            \n           </div>\n    </div>\n        '}}}}]);
//# sourceMappingURL=taskManager-index-js-173.js.map